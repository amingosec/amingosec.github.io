<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Fiel Upload Vulnerabilities - 標籤 - 資安工作筆記</title>
        <link>https://amingosec.github.io/tags/fiel-upload-vulnerabilities/</link>
        <description>Fiel Upload Vulnerabilities - 標籤 - 資安工作筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Fri, 15 Apr 2022 16:08:45 &#43;0000</lastBuildDate><atom:link href="https://amingosec.github.io/tags/fiel-upload-vulnerabilities/" rel="self" type="application/rss+xml" /><item>
    <title>PortSwigger-檔案上傳漏洞 lab 6</title>
    <link>https://amingosec.github.io/posts/lab-remote-code-execution-via-polyglot-web-shell-upload/</link>
    <pubDate>Fri, 15 Apr 2022 16:08:45 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/lab-remote-code-execution-via-polyglot-web-shell-upload/</guid>
    <description><![CDATA[<p>Lab: Remote code execution via polyglot web shell upload</p>
<h2 id="lab-目標">Lab 目標</h2>
<ul>
<li>跟上一個lab相同，利用上傳漏洞將目標主機上/home/carlos/secret檔案內容輸出，再將輸出的內容subsmit。</li>
<li>此 lab 會檢查檔案 header 因此需產生 polyglot web shell 來上傳。</li>
</ul>
<h2 id="步驟">步驟</h2>
<ul>
<li>如同之前的 lab 先找到上傳後可被存取的路徑。</li>
<li>因為此 lab 開始針對檔案 header 進行檢查，因此會發現之前幾個 lab 的手法無法使用。</li>
<li>需要將 payload 加到圖片檔中來執行。</li>
<li>下面指令使用 exiftool 來將 payload 加入圖片 exif 的 comment 中，並產生一個附檔名為 php 的圖片檔。kali 預設沒有安裝 exiftool，執行<code>sudo apt install libimage-exiftool-perl</code>來安裝。</li>
</ul>
<pre tabindex="0"><code>exiftool -Comment=&#34;&lt;?php echo &#39; FLAG_START &#39; . file_get_contents(&#39;/home/carlos/secret&#39;) . &#39; FLAG_END &#39;; ?&gt;&#34; &lt;image_file&gt;.png -o payload.php 
</code></pre><ul>
<li>因為單純將 flag 顯示出來，會跟其他圖片檔亂碼接在一起，容易搞混，在前後分別加上 <code>FLAG_START</code> 、 <code>FLAG_END</code>加以區別。</li>
<li>將產生的<code>payload.php</code>上傳後，存取<code>/files/avatars/payload.php</code>即可取得此Lab的Flag。</li>
</ul>
<h2 id="補充說明">補充說明</h2>
<p>在執行 php 檔時，會從<code>&lt;?</code>開始到<code>?&gt;</code>結束，因此將 php code 內容放在 png 的 comment 中，再存成 .php 檔，會把其他內容當成亂碼，但執行放在 comment 的 php code。</p>]]></description>
</item>
<item>
    <title>PortSwigger-檔案上傳漏洞 lab 5</title>
    <link>https://amingosec.github.io/posts/lab-web-shell-upload-via-obfuscated-file-extension/</link>
    <pubDate>Mon, 04 Apr 2022 02:38:09 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/lab-web-shell-upload-via-obfuscated-file-extension/</guid>
    <description><![CDATA[<p>Lab: Web shell upload via obfuscated file extension</p>
<h2 id="lab-目標">Lab 目標</h2>
<p>跟上一個lab相同，利用上傳漏洞將目標主機上<code>/home/carlos/secret</code>檔案內容輸出，再將輸出的內容subsmit。</p>]]></description>
</item>
<item>
    <title>PortSwigger-檔案上傳漏洞 lab 4</title>
    <link>https://amingosec.github.io/posts/lab-web-shell-upload-via-extension-blacklist-bypass/</link>
    <pubDate>Wed, 30 Mar 2022 16:10:42 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/lab-web-shell-upload-via-extension-blacklist-bypass/</guid>
    <description><![CDATA[<p>Lab: Web shell upload via extension blacklist bypass</p>
<h2 id="lab-目標">Lab 目標</h2>
<p>跟上一個lab相同，利用上傳漏洞將目標主機上<code>/home/carlos/secret</code>檔案內容輸出，再將輸出的內容subsmit。</p>]]></description>
</item>
<item>
    <title>PortSwigger-檔案上傳漏洞 lab 3</title>
    <link>https://amingosec.github.io/posts/portswigger-lab-web-shell-upload-via-path-traversal/</link>
    <pubDate>Sun, 20 Mar 2022 13:33:54 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/portswigger-lab-web-shell-upload-via-path-traversal/</guid>
    <description><![CDATA[<p>Lab: Web shell upload via path traversal</p>
<h2 id="lab-目標">Lab 目標</h2>
<p>跟上一個lab相同，利用上傳漏洞將目標主機上<code>/home/carlos/secret</code>檔案內容輸出，再將輸出的內容subsmit。</p>]]></description>
</item>
</channel>
</rss>
