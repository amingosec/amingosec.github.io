<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>XSS - 標籤 - 資安工作筆記</title>
        <link>https://amingosec.github.io/tags/xss/</link>
        <description>XSS - 標籤 - 資安工作筆記</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Wed, 01 Aug 2018 05:54:45 &#43;0000</lastBuildDate><atom:link href="https://amingosec.github.io/tags/xss/" rel="self" type="application/rss+xml" /><item>
    <title>Lab - alert(1) to win</title>
    <link>https://amingosec.github.io/posts/alert1-to-win/</link>
    <pubDate>Wed, 01 Aug 2018 05:54:45 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/alert1-to-win/</guid>
    <description><![CDATA[<h2 id="介紹">介紹</h2>
<p>alert(1) to win 是一個練習 xss 攻擊的一個地方，讓人可以從基本的 lab 開始瞭解 xss 攻擊的手法。</p>
<h2 id="level-0-warmup">Level 0-Warmup</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="err">&#34;</span><span class="p">);</span><span class="nx">alert</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="c1">//
</span></span></span></code></pre></div><h2 id="level-1-adobe">Level 1-Adobe</h2>
<p>這關將 <code>&quot;</code> replace為 <code>\&quot;</code>，因此要試著繞過。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="o">%</span><span class="mi">22</span><span class="p">)</span><span class="nx">alert</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="c1">//
</span></span></span></code></pre></div><h2 id="level-2-json">Level 2-Json</h2>
<p>這題使用了<a href="https://www.w3schools.com/js/js_json_stringify.asp" target="_blank" rel="noopener noreffer ">Json.stringify</a>，可看一下運作的方式。</p>]]></description>
</item>
<item>
    <title>Lab - prompt(1) to win (XSS)</title>
    <link>https://amingosec.github.io/posts/prompt1-to-win-xss/</link>
    <pubDate>Wed, 25 Jul 2018 06:22:01 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/prompt1-to-win-xss/</guid>
    <description><![CDATA[<p>在不少等級中都有出現input.replace 的function，使用方法可以參考https://www.w3schools.com/jsref/jsref_replace.asp，有對replace method說明，有所了解後會對prompt(1)的思路比較有想法。</p>]]></description>
</item>
<item>
    <title>網頁攻擊手法-XSS 介紹</title>
    <link>https://amingosec.github.io/posts/introduction-to-cross-site-scripting-xss/</link>
    <pubDate>Tue, 10 Jul 2018 03:00:11 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://amingosec.github.io/posts/introduction-to-cross-site-scripting-xss/</guid>
    <description><![CDATA[<h2 id="介紹">介紹</h2>
<p>Cross Site Script, XSS主要為在Client side 的攻擊，對server來說沒有直接影響，但對使用者端來說，可能會有cookie被拿走的風險。在實作上類似於SQLi，尋找與分析注入點後，試著對前面的語法進行閉合，再插入攻擊語法。但因為目前不少網站有對輸入的文字進行script過濾，可用其他呼叫的方法達成。</p>]]></description>
</item>
</channel>
</rss>
